// src/navigation/index.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ü–†–ê–í–ò–õ–¨–ù–´–ú –ü–û–¢–û–ö–û–ú

import React, { useContext, useState, useEffect } from "react";
import { TouchableOpacity, Text } from "react-native";
import { Ionicons } from "@expo/vector-icons";
import {
  NavigationContainer,
  DefaultTheme,
  DarkTheme,
  getFocusedRouteNameFromRoute,
} from "@react-navigation/native";
import { createNativeStackNavigator } from "@react-navigation/native-stack";
import { ThemeContext } from "../context/ThemeContext";
import AsyncStorage from "@react-native-async-storage/async-storage";

// Screens
import SplashScreen from "../screens/SplashScreen";
import OnboardingScreen from "../screens/OnboardingScreen";
import Registration from "../screens/Registration";
import LoginScreen from "../screens/LoginScreen";
import TransactionAdd from "../screens/TransactionAdd";
import PrivacyPolicy from "../screens/PrivacyPolicy";
import BottomTabNavigator from "./BottomTabNavigator";
import TransferScreen from "../screens/TransferScreen";
import AppSettings from "../screens/AppSettings";
import ForgotPasswordScreen from "../screens/ForgotPasswordScreen";
import PasswordResetConfirmScreen from "../screens/PasswordResetConfirmScreen";
import NotificationsScreen from "../screens/NotificationsScreen";
import AllTransactionsScreen from "../screens/AllTransactionsScreen";
import PersonalInformationScreen from "../screens/PersonalInformationScreen";
import BudgetCategoriesScreen from "../screens/BudgetCategoriesScreen";
import LanguageScreen from "../screens/LanguageScreen";
import SetBudgetScreen from "../screens/SetBudgetScreen";
import AnalyticsScreen from "../screens/AnalyticsScreen";
import AllBudgetsScreen from "../screens/AllBudgetsScreen";
import ExportReportScreen from "../screens/ExportReportScreen";
import ChatBotScreen from "../screens/ChatBotScreen";

const Stack = createNativeStackNavigator();

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const NavigationController = () => {
  const { theme } = useContext(ThemeContext);
  const [initialRoute, setInitialRoute] = useState(null);
  const [isReady, setIsReady] = useState(false);

  const isDark = theme === "dark";

  const headerBackground = isDark ? "#1F2937" : "#FFFFFF";
  const headerTextColor = isDark ? "#FFFFFF" : "#111827";
  const headerBorderColor = isDark ? "#374151" : "#F3F4F6";

  const defaultHeaderOptions = {
    headerStyle: {
      backgroundColor: headerBackground,
      borderBottomWidth: 1,
      borderBottomColor: headerBorderColor,
    },
    headerTitleStyle: {
      color: headerTextColor,
      fontSize: 20,
      fontWeight: "600",
    },
    headerTintColor: headerTextColor,
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç - –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò
  useEffect(() => {
    const determineInitialRoute = async () => {
      try {
        console.log("üöÄ DEVELOPMENT MODE: Always starting with Onboarding");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º splash –º–∏–Ω–∏–º—É–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        const startTime = Date.now();
        
        // –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò: –í–°–ï–ì–î–ê –ù–ê–ß–ò–ù–ê–ï–ú –° ONBOARDING
        const targetRoute = "Onboarding";
        
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ splash –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2 —Å–µ–∫—É–Ω–¥—ã
        const elapsedTime = Date.now() - startTime;
        const remainingTime = Math.max(0, 2000 - elapsedTime);
        
        if (remainingTime > 0) {
          console.log(`‚è±Ô∏è Waiting additional ${remainingTime}ms for smooth transition`);
          await new Promise(resolve => setTimeout(resolve, remainingTime));
        }
        
        console.log(`üéØ Setting initial route: ${targetRoute}`);
        setInitialRoute(targetRoute);
        setIsReady(true);
        
      } catch (error) {
        console.error("‚ùå Error determining initial route:", error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º onboarding
        setInitialRoute("Onboarding");
        setIsReady(true);
      }
    };

    determineInitialRoute();
  }, []);

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
  const makeBackOptions = ({ navigation }) => {
    const state = navigation.getState();
    const { routes, index } = state;
    const prevRoute = routes[index - 1] || {};
    let previousRouteName = prevRoute.name ?? "–ù–∞–∑–∞–¥";
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä, –±–µ—Ä–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–±
    if (prevRoute.state) {
      const nestedIndex = prevRoute.state.index;
      const nestedRoute = prevRoute.state.routes[nestedIndex];
      previousRouteName = nestedRoute?.name ?? previousRouteName;
    }

    return {
      ...defaultHeaderOptions,
      headerShown: true,
      headerLeft: () => (
        <TouchableOpacity
          style={{ flexDirection: "row", alignItems: "center", marginRight: 15 }}
          onPress={() => navigation.goBack()}
        >
          <Ionicons name="chevron-back" size={24} color={headerTextColor} />
          <Text style={{ color: headerTextColor, fontSize: 16 }}>
            {previousRouteName}
          </Text>
        </TouchableOpacity>
      ),
    };
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Splash –ø–æ–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
  if (!isReady) {
    return <SplashScreen />;
  }

  return (
    <NavigationContainer theme={theme === "dark" ? DarkTheme : DefaultTheme}>
      <Stack.Navigator 
        initialRouteName={initialRoute}
        screenOptions={{ headerShown: false }}
      >
        {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã */}
        <Stack.Screen 
          name="Splash" 
          component={SplashScreen}
          options={{ headerShown: false }}
        />
        
        <Stack.Screen 
          name="Onboarding" 
          component={OnboardingScreen}
          options={{ headerShown: false }}
        />

        {/* –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è */}
        <Stack.Screen 
          name="Login" 
          component={LoginScreen}
          options={{ headerShown: false }}
        />
        
        <Stack.Screen 
          name="ForgotPassword" 
          component={ForgotPasswordScreen}
          options={{ headerShown: false }}
        />
        
        <Stack.Screen 
          name="PasswordResetConfirm" 
          component={PasswordResetConfirmScreen}
          options={{ headerShown: false }}
        />
        
        <Stack.Screen 
          name="Registration" 
          component={Registration}
          options={{ headerShown: false }}
        />

        {/* –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ */}
        <Stack.Screen 
          name="MainPage" 
          component={BottomTabNavigator}
          options={{ headerShown: false }}
        />

        {/* –≠–∫—Ä–∞–Ω—ã —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ */}
        <Stack.Screen
          name="Transaction Add"
          component={TransactionAdd}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Notifications"
          component={NotificationsScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Transfer"
          component={TransferScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Privacy Policy"
          component={PrivacyPolicy}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="App Settings"
          component={AppSettings}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="All Transactions"
          component={AllTransactionsScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Personal Information"
          component={PersonalInformationScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Budget Categories"
          component={BudgetCategoriesScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Language"
          component={LanguageScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Set Budget"
          component={SetBudgetScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Budget Analytics"
          component={AnalyticsScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="All Budgets"
          component={AllBudgetsScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Export Report"
          component={ExportReportScreen}
          options={makeBackOptions}
        />

        <Stack.Screen
          name="Chat Bot"
          component={ChatBotScreen}
          options={{ headerShown: false }}
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
export default function RootNavigation() {
  return <NavigationController />;
}